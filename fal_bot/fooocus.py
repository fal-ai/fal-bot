import time
from dataclasses import dataclass
from typing import Any, Literal

import discord
from discord import app_commands

from fal_bot import config, utils
from fal_bot.consts import FOOOCUS_ASPECT_RATIOS, FOOOCUS_STYLES

FOOOCUS_BASE_URL = "https://110602490-fooocus.gateway.alpha.fal.ai"

DEFAULT_STYLES = FOOOCUS_STYLES[:24]
KEEP_STYLE = "keep"


def style_selector() -> list[discord.SelectOption]:
    options = [
        discord.SelectOption(
            label="Keep current style",
            value=KEEP_STYLE,
        )
    ]
    for style in DEFAULT_STYLES:
        options.append(
            discord.SelectOption(
                label=" ".join(style.split("-")).title(),
                value=style,
            )
        )

    return options


@dataclass
class RegenerateView(discord.ui.View):
    original_interaction: discord.Interaction
    options: dict[str, Any]

    def __post_init__(self) -> None:
        super().__init__()

    async def remove_view(self) -> None:
        await self.original_interaction.edit_original_response(view=None)

    async def on_timeout(self) -> None:
        await self.remove_view()
        await super().on_timeout()

    @discord.ui.select(
        placeholder="Change style",
        min_values=1,
        max_values=1,
        options=style_selector(),
    )
    async def with_style(
        self,
        interaction: discord.Interaction,
        select: discord.ui.Select,
    ):
        await self.remove_view()

        [style] = select.values
        if style == KEEP_STYLE:
            style = self.style

        await command.callback(interaction, **self.options)


@app_commands.command(
    name="generate",
    description="Text to image generation with Fooocus.",
)
@app_commands.autocomplete(style=utils.autocomplete_from(FOOOCUS_STYLES))
@app_commands.autocomplete(aspect_ratio=utils.autocomplete_from(FOOOCUS_ASPECT_RATIOS))
async def command(
    interaction: discord.Interaction,
    prompt: str,
    style: str = "cinematic-default",
    mode: Literal["Speed", "Quality"] = "Speed",
    aspect_ratio: str = "1024x1024",
):
    await interaction.response.send_message("Your request has been received.")
    time_start = time.monotonic()
    result = await utils.submit_interactive_task(
        interaction,
        FOOOCUS_BASE_URL,
        prompt=prompt,
        style=style,
        performance=mode,
        aspect_ratio=aspect_ratio.replace("x", "Ã—"),
    )
    image_url = result["images"][0]["url"]
    embed = discord.Embed(
        title="Fooocus Image",
        description=f"For the full resolution image, click [here]({image_url}).",
    )
    embed.add_field(name="Prompt", value=prompt, inline=False)
    embed.add_field(name="Style", value=style)
    embed.add_field(
        name="Total time taken",
        value=f"{time.monotonic() - time_start:.2f}s",
    )
    embed.add_field(name="Mode", value=mode)
    embed.add_field(name="Aspect ratio", value=aspect_ratio)
    embed.add_field(name="Generated by", value=interaction.user.mention)
    embed.set_image(url=image_url)
    embed.set_footer(
        text="Powered by serverless.fal.ai",
        icon_url=config.FALAI_LOGO_URL,
    )

    await interaction.edit_original_response(
        content=None,
        embed=embed,
        view=RegenerateView(
            interaction,
            options={
                "prompt": prompt,
                "style": style,
                "mode": mode,
                "aspect_ratio": aspect_ratio,
            },
        ),
    )
